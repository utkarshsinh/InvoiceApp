{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport db from \"../firebase/firebaseInit\";\nimport ModalPopup from \"../components/Modal\";\nimport { mapActions, mapMutations, mapState } from \"vuex\";\nimport { uid } from \"uid\";\nexport default {\n  name: \"InvoiceModalVue\",\n  data() {\n    return {\n      isDraft: false,\n      dateOptions: {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      },\n      docId: null,\n      billerStreetAddress: null,\n      billerCity: null,\n      billerZipCode: null,\n      billerCountry: null,\n      clientName: null,\n      clientEmail: null,\n      clientStreetAddress: null,\n      clientCity: null,\n      clientZipCode: null,\n      clientCountry: null,\n      invoiceDateUnix: null,\n      invoiceDate: null,\n      paymentTerms: null,\n      paymentDueDateUnix: null,\n      paymentDueDate: null,\n      productDescription: null,\n      invoicePending: null,\n      invoiceDraft: null,\n      invoiceItemList: [],\n      invoiceTotal: 0\n    };\n  },\n  components: {\n    ModalPopup\n  },\n  created() {\n    if (!this.editInvoice) {\n      this.invoiceDateUnix = Date.now();\n      this.invoiceDate = new Date(this.invoiceDateUnix).toLocaleDateString(\"en-us\", this.dateOptions);\n    }\n    if (this.editInvoice) {\n      const currentInvoice = this.currentInvoiceArray[0];\n      this.docId = currentInvoice.docId;\n      this.billerStreetAddress = currentInvoice.billerStreetAddress;\n      this.billerCity = currentInvoice.billerCity;\n      this.billerZipCode = currentInvoice.billerZipCode;\n      this.billerCountry = currentInvoice.billerCountry;\n      this.clientName = currentInvoice.clientName;\n      this.clientEmail = currentInvoice.clientEmail;\n      this.clientStreetAddress = currentInvoice.clientStreetAddress;\n      this.clientCity = currentInvoice.clientCity;\n      this.clientZipCode = currentInvoice.clientZipCode;\n      this.clientCountry = currentInvoice.clientCountry;\n      this.invoiceDateUnix = currentInvoice.invoiceDateUnix;\n      this.invoiceDate = currentInvoice.invoiceDate;\n      this.paymentTerms = currentInvoice.paymentTerms;\n      this.paymentDueDateUnix = currentInvoice.paymentDueDateUnix;\n      this.paymentDueDate = currentInvoice.paymentDueDate;\n      this.productDescription = currentInvoice.productDescription;\n      this.invoicePending = currentInvoice.invoicePending;\n      this.invoiceDraft = currentInvoice.invoiceDraft;\n      this.invoiceItemList = currentInvoice.invoiceItemList;\n      this.invoiceTotal = currentInvoice.invoiceTotal;\n    }\n  },\n  methods: {\n    ...mapMutations([\"TOGGLE_INVOICE\", \"TOGGLE_MODAL\", \"TOGGLE_EDIT_INVOICE\"]),\n    ...mapActions(['UPDATE_INVOICE', 'GET_INVOICES']),\n    checkClick(e) {\n      if (e.target === this.$refs.invoiceWrap) {\n        this.TOGGLE_MODAL();\n      }\n    },\n    closeInvoice() {\n      this.TOGGLE_INVOICE();\n      if (this.editInvoice) {\n        this.TOGGLE_EDIT_INVOICE();\n      }\n    },\n    addNewInvoiceItem() {\n      this.invoiceItemList.push({\n        id: uid(),\n        itemName: \"\",\n        qty: \"\",\n        price: 0,\n        total: 0\n      });\n    },\n    deleteInvoiceItem(id) {\n      this.invoiceItemList = this.invoiceItemList.filter(item => item.id !== id);\n    },\n    calInvoiceTotal() {\n      this.invoiceTotal = 0;\n      this.invoiceItemList.forEach(item => {\n        this.invoiceTotal += item.total;\n      });\n    },\n    publishInvoice() {\n      this.invoicePending = true;\n    },\n    saveDraft() {\n      this.invoiceDraft = true;\n      this.isDraft = true;\n      this.invoicePending = false;\n    },\n    async uploadInvoice() {\n      // if (this.invoiceItemList.length <= 0) {\n      //     alert(\"Please ensure you filled out work items!\");\n      //     return;\n      // }\n\n      this.calInvoiceTotal();\n      const dataBase = db.collection(\"invoices\").doc();\n      await dataBase.set({\n        invoiceId: uid(6),\n        billerStreetAddress: this.billerStreetAddress,\n        billerCity: this.billerCity,\n        billerZipCode: this.billerZipCode,\n        billerCountry: this.billerCountry,\n        clientName: this.clientName,\n        clientEmail: this.clientEmail,\n        clientStreetAddress: this.clientStreetAddress,\n        clientCity: this.clientCity,\n        clientZipCode: this.clientZipCode,\n        clientCountry: this.clientCountry,\n        invoiceDate: this.invoiceDate,\n        invoiceDateUnix: this.invoiceDateUnix,\n        paymentTerms: this.paymentTerms,\n        paymentDueDate: this.paymentDueDate,\n        paymentDueDateUnix: this.paymentDueDateUnix,\n        productDescription: this.productDescription,\n        invoiceItemList: this.invoiceItemList,\n        invoiceTotal: this.invoiceTotal,\n        invoicePending: this.invoicePending,\n        invoiceDraft: this.invoiceDraft,\n        invoicePaid: null\n      });\n      this.loading = false;\n      this.TOGGLE_INVOICE();\n      this.GET_INVOICES();\n    },\n    async updateInvoice() {\n      // if (this.invoiceItemList.length <= 0) {\n      //     alert(\"Please ensure you filled out work items!\");\n      //     return;\n      // }\n\n      this.invoicePending = true;\n      this.invoiceDraft = false;\n      this.calInvoiceTotal();\n      const dataBase = db.collection(\"invoices\").doc(this.docId);\n      await dataBase.update({\n        billerStreetAddress: this.billerStreetAddress,\n        billerCity: this.billerCity,\n        billerZipCode: this.billerZipCode,\n        billerCountry: this.billerCountry,\n        clientName: this.clientName,\n        clientEmail: this.clientEmail,\n        clientStreetAddress: this.clientStreetAddress,\n        clientCity: this.clientCity,\n        clientZipCode: this.clientZipCode,\n        clientCountry: this.clientCountry,\n        paymentTerms: this.paymentTerms,\n        paymentDueDate: this.paymentDueDate,\n        paymentDueDateUnix: this.paymentDueDateUnix,\n        productDescription: this.productDescription,\n        invoiceItemList: this.invoiceItemList,\n        invoiceTotal: this.invoiceTotal,\n        invoicePending: this.invoicePending,\n        invoiceDraft: this.invoiceDraft\n      });\n      this.loading = false;\n      const data = {\n        docId: this.docId,\n        routeId: this.$route.params.invoiceId\n      };\n      this.UPDATE_INVOICE(data);\n    },\n    submitForm() {\n      if (this.editInvoice) {\n        this.updateInvoice();\n        return;\n      }\n      this.uploadInvoice();\n    }\n  },\n  computed: {\n    ...mapState(['editInvoice', \"currentInvoiceArray\"])\n  },\n  watch: {\n    paymentTerms() {\n      const futureDate = new Date();\n      this.paymentDueDateUnix = futureDate.setDate(futureDate.getDate() + parseInt(this.paymentTerms));\n      this.paymentDueDate = new Date(this.paymentDueDateUnix).toLocaleDateString(\"en-us\", this.dateOptions);\n    }\n  }\n};","map":{"version":3,"names":["db","ModalPopup","mapActions","mapMutations","mapState","uid","name","data","isDraft","dateOptions","year","month","day","docId","billerStreetAddress","billerCity","billerZipCode","billerCountry","clientName","clientEmail","clientStreetAddress","clientCity","clientZipCode","clientCountry","invoiceDateUnix","invoiceDate","paymentTerms","paymentDueDateUnix","paymentDueDate","productDescription","invoicePending","invoiceDraft","invoiceItemList","invoiceTotal","components","created","editInvoice","Date","now","toLocaleDateString","currentInvoice","currentInvoiceArray","methods","checkClick","e","target","$refs","invoiceWrap","TOGGLE_MODAL","closeInvoice","TOGGLE_INVOICE","TOGGLE_EDIT_INVOICE","addNewInvoiceItem","push","id","itemName","qty","price","total","deleteInvoiceItem","filter","item","calInvoiceTotal","forEach","publishInvoice","saveDraft","uploadInvoice","dataBase","collection","doc","set","invoiceId","invoicePaid","loading","GET_INVOICES","updateInvoice","update","routeId","$route","params","UPDATE_INVOICE","submitForm","computed","watch","futureDate","setDate","getDate","parseInt"],"sources":["/Users/utkarshsinh/Desktop/Projects/Invoice/typescriptreact-invoice-app-fmgtix/invoice/src/components/InvoiceModal.vue"],"sourcesContent":["<template>\n<div @click=\"checkClick\" ref=\"invoiceWrap\" class=\"invoice-wrap flex flex-column\">\n    <form @submit.prevent=\"submitForm\" class=\"invoice-content\">\n        <h1 v-if=\"!editInvoice\">New Invoice</h1>\n        <h1 v-else>Edit Invoice</h1>\n\n        <div class=\"bill-from flex flex-column\">\n          <ModalPopup />\n        <h4>Bill From</h4>\n        <div class=\"input flex flex-column\">\n          <label for=\"billerStreetAddress\">Street Address</label>\n          <input :required=\"!isDraft\" type=\"text\" id=\"billerStreetAddress\" v-model=\"billerStreetAddress\" />\n        </div>\n        <div class=\"location-details flex\">\n          <div class=\"input flex flex-column\">\n            <label for=\"billerCity\">City</label>\n            <input :required=\"!isDraft\" type=\"text\" id=\"billerCity\" v-model=\"billerCity\" />\n          </div>\n          <div class=\"input flex flex-column\">\n            <label for=\"billerZipCode\">Zip Code</label>\n            <input :required=\"!isDraft\" type=\"text\" id=\"billerZipCode\" v-model=\"billerZipCode\" />\n          </div>\n          <div class=\"input flex flex-column\">\n            <label for=\"billerCountry\">Country</label>\n            <input :required=\"!isDraft\" type=\"text\" id=\"billerCountry\" v-model=\"billerCountry\" />\n          </div>\n        </div>\n      </div>\n\n        <!-- Bill To  -->\n        <div class=\"bill-to flex flex-column\">\n            <h4>Bill To</h4>\n            <div class=\"input flex flex-column\">\n                <label for=\"clientName\">Client's Name</label>\n                <input :required=\"!isDraft\" type=\"text\" id=\"clientName\" v-model=\"clientName\" />\n            </div>\n            <div class=\"input flex flex-column\">\n                <label for=\"clientEmail\">Client's Email</label>\n                <input :required=\"!isDraft\" type=\"text\" id=\"clientEmail\" v-model=\"clientEmail\" />\n            </div>\n            <div class=\"input flex flex-column\">\n                <label for=\"clientStreetAddress\">Street Address</label>\n                <input :required=\"!isDraft\" type=\"text\" id=\"clientStreetAddress\" v-model=\"clientStreetAddress\" />\n            </div>\n            <div class=\"location-details flex\">\n                <div class=\"input flex flex-column\">\n                    <label for=\"clientCity\">City</label>\n                    <input :required=\"!isDraft\" type=\"text\" id=\"clientCity\" v-model=\"clientCity\" />\n                </div>\n                <div class=\"input flex flex-column\">\n                    <label for=\"clientZipCode\">Zip Code</label>\n                    <input :required=\"!isDraft\" type=\"text\" id=\"clientZipCode\" v-model=\"clientZipCode\" />\n                </div>\n                <div class=\"input flex flex-column\">\n                    <label for=\"clientCountry\">Country</label>\n                    <input :required=\"!isDraft\" type=\"text\" id=\"clientCountry\" v-model=\"clientCountry\" />\n                </div>\n            </div>\n        </div>\n\n        <!-- Invoice Work Details -->\n        <div class=\"invoice-work flex flex-column\">\n            <div class=\"payment flex\">\n                <div class=\"input flex flex-column\">\n                    <label for=\"invoiceDate\">Invoice Date</label>\n                    <input disabled type=\"text\" id=\"invoiceDate\" v-model=\"invoiceDate\" />\n                </div>\n                <div class=\"input flex flex-column\">\n                    <label for=\"paymentDueDate\">Payment Due</label>\n                    <input disabled type=\"text\" id=\"paymentDueDate\" v-model=\"paymentDueDate\" />\n                </div>\n            </div>\n            <div class=\"input flex flex-column\">\n                <label for=\"paymentTerms\">Payment Terms</label>\n                <select :required=\"!isDraft\"  type=\"text\" id=\"paymentTerms\" v-model=\"paymentTerms\" >\n                    <option value=\"30\">Net 30 Days</option>\n                    <option value=\"60\">Net 60 Days</option>\n                </select>\n            </div>\n            <div class=\"input flex flex-column\">\n                <label for=\"productDescription\">Product Description</label>\n                <input :required=\"!isDraft\"  type=\"text\" id=\"productDescription\" v-model=\"productDescription\" />\n            </div>\n        <div class=\"work-items\">\n            <h3> Item List</h3>\n            <table class=\"item-list\">\n                <tr class=\"table-heading flex\">\n                    <th class=\"item-name\">Item Name</th>\n                    <th class=\"qty\">Qty</th>\n                    <th class=\"price\">Price</th>\n                    <th class=\"total\">Total</th>\n                </tr>\n                <tr class=\"table-items flex\" v-for=\"(item, index) in invoiceItemList\" :key=\"index\">\n                    <td class=\"item-name\"><input type=\"text\" v-model=\"item.itemName\" /></td>\n                    <td class=\"qty\"><input type=\"text\" v-model=\"item.qty\" /></td>\n                    <td class=\"price\"><input type=\"text\" v-model=\"item.price\" /></td>\n                    <td class=\"total flex\">${{ (item.total = item.qty * item.price) }}</td>\n                    <img @click=\"deleteInvoiceItem(item.id)\" src=\"@/assets/icon-delete.svg\" alt=\"\" />\n                </tr>\n            </table>\n\n            <div @click=\"addNewInvoiceItem\" class=\"flex button\">\n                <img src=\"@/assets/icon-plus.svg\" alt=\"\" />\n                Add New Item\n            </div>\n        </div>\n        </div>\n\n        <!-- Save/Exit -->\n        <div class=\"save flex\">\n            <div class=\"left\">\n              <button type=\"button\" @click=\"closeInvoice\" class=\"red\">Cancel</button>\n            </div>\n            <div class=\"right flex\">\n                <button v-if=\"!editInvoice\" type=\"submit\" @click=\"saveDraft\" class=\"dark-purple\">Save Draft</button>\n                <button v-if=\"!editInvoice\" type=\"submit\" @click=\"publishInvoice\" class=\"purple\">Create Invoice</button>\n                <button v-if=\"editInvoice\" type=\"sumbit\" class=\"purple\">Update Invoice</button>\n            </div>\n        </div>\n    </form>\n</div>\n</template>\n\n<script>\nimport db from \"../firebase/firebaseInit\";\nimport ModalPopup from \"../components/Modal\"\nimport { mapActions, mapMutations, mapState } from \"vuex\";\nimport {uid} from \"uid\";\nexport default {\n    name: \"InvoiceModalVue\", \n    data() {\n        return {\n            isDraft: false,\n            dateOptions: { year: \"numeric\", month: \"short\", day: \"numeric\" },\n            docId: null,\n            billerStreetAddress: null,\n            billerCity: null,\n            billerZipCode: null,\n            billerCountry: null,\n            clientName: null,\n            clientEmail: null,\n            clientStreetAddress: null,\n            clientCity: null,\n            clientZipCode: null,\n            clientCountry: null,\n            invoiceDateUnix: null,\n            invoiceDate: null,\n            paymentTerms: null,\n            paymentDueDateUnix: null,\n            paymentDueDate: null,\n            productDescription: null,\n            invoicePending: null,\n            invoiceDraft: null,\n            invoiceItemList: [],\n            invoiceTotal: 0,\n        };\n    },\n    components: {\n      ModalPopup,\n    },\n    created() {\n      if (!this.editInvoice) {\n            this.invoiceDateUnix = Date.now();\n            this.invoiceDate = new Date(this.invoiceDateUnix).toLocaleDateString(\"en-us\", this.dateOptions);\n          }\n\n      if (this.editInvoice) {\n      const currentInvoice = this.currentInvoiceArray[0];\n      this.docId = currentInvoice.docId;\n      this.billerStreetAddress = currentInvoice.billerStreetAddress;\n      this.billerCity = currentInvoice.billerCity;\n      this.billerZipCode = currentInvoice.billerZipCode;\n      this.billerCountry = currentInvoice.billerCountry;\n      this.clientName = currentInvoice.clientName;\n      this.clientEmail = currentInvoice.clientEmail;\n      this.clientStreetAddress = currentInvoice.clientStreetAddress;\n      this.clientCity = currentInvoice.clientCity;\n      this.clientZipCode = currentInvoice.clientZipCode;\n      this.clientCountry = currentInvoice.clientCountry;\n      this.invoiceDateUnix = currentInvoice.invoiceDateUnix;\n      this.invoiceDate = currentInvoice.invoiceDate;\n      this.paymentTerms = currentInvoice.paymentTerms;\n      this.paymentDueDateUnix = currentInvoice.paymentDueDateUnix;\n      this.paymentDueDate = currentInvoice.paymentDueDate;\n      this.productDescription = currentInvoice.productDescription;\n      this.invoicePending = currentInvoice.invoicePending;\n      this.invoiceDraft = currentInvoice.invoiceDraft;\n      this.invoiceItemList = currentInvoice.invoiceItemList;\n      this.invoiceTotal = currentInvoice.invoiceTotal;\n      }\n    },\n    methods: {\n        ...mapMutations([\"TOGGLE_INVOICE\",\"TOGGLE_MODAL\", \"TOGGLE_EDIT_INVOICE\"]),\n\n        ...mapActions(['UPDATE_INVOICE', 'GET_INVOICES']),\n\n        checkClick(e) {\n            if (e.target === this.$refs.invoiceWrap) {\n                this.TOGGLE_MODAL();\n                }\n            },\n\n        closeInvoice() {\n            this.TOGGLE_INVOICE()\n            if (this.editInvoice)\n            {\n              this.TOGGLE_EDIT_INVOICE();\n            }\n        },\n\n        addNewInvoiceItem() {\n           this.invoiceItemList.push({\n                id: uid(),\n                itemName: \"\",\n                qty: \"\",\n                price: 0,\n                total: 0,\n\n           }) \n        },\n\n        deleteInvoiceItem(id) {\n        this.invoiceItemList = this.invoiceItemList.filter((item) => item.id !== id);\n        },\n\n        calInvoiceTotal() {\n            this.invoiceTotal = 0;\n            this.invoiceItemList.forEach((item) => {\n                this.invoiceTotal += item.total;\n            });\n        },\n\n        publishInvoice() {\n        this.invoicePending = true;\n        },\n\n        saveDraft() {\n        this.invoiceDraft = true;\n        this.isDraft = true;\n        this.invoicePending = false;\n\n        },\n\n        async uploadInvoice() {\n            // if (this.invoiceItemList.length <= 0) {\n            //     alert(\"Please ensure you filled out work items!\");\n            //     return;\n            // }\n\n            this.calInvoiceTotal()\n\n            const dataBase = db.collection(\"invoices\").doc();\n\n            await dataBase.set({\n                invoiceId: uid(6),\n                billerStreetAddress: this.billerStreetAddress,\n                billerCity: this.billerCity,\n                billerZipCode: this.billerZipCode,\n                billerCountry: this.billerCountry,\n                clientName: this.clientName,\n                clientEmail: this.clientEmail,\n                clientStreetAddress: this.clientStreetAddress,\n                clientCity: this.clientCity,\n                clientZipCode: this.clientZipCode,\n                clientCountry: this.clientCountry,\n                invoiceDate: this.invoiceDate,\n                invoiceDateUnix: this.invoiceDateUnix,\n                paymentTerms: this.paymentTerms,\n                paymentDueDate: this.paymentDueDate,\n                paymentDueDateUnix: this.paymentDueDateUnix,\n                productDescription: this.productDescription,\n                invoiceItemList: this.invoiceItemList,\n                invoiceTotal: this.invoiceTotal,\n                invoicePending: this.invoicePending,\n                invoiceDraft: this.invoiceDraft,\n                invoicePaid: null,\n            });\n            this.loading = false;\n\n            this.TOGGLE_INVOICE();\n\n            this.GET_INVOICES();\n        },\n\n        async updateInvoice() {\n            // if (this.invoiceItemList.length <= 0) {\n            //     alert(\"Please ensure you filled out work items!\");\n            //     return;\n            // }\n\n            this.invoicePending = true\n            this.invoiceDraft = false\n\n            this.calInvoiceTotal()\n\n            const dataBase = db.collection(\"invoices\").doc(this.docId);\n\n          await dataBase.update({\n          billerStreetAddress: this.billerStreetAddress,\n          billerCity: this.billerCity,\n          billerZipCode: this.billerZipCode,\n          billerCountry: this.billerCountry,\n          clientName: this.clientName,\n          clientEmail: this.clientEmail,\n          clientStreetAddress: this.clientStreetAddress,\n          clientCity: this.clientCity,\n          clientZipCode: this.clientZipCode,\n          clientCountry: this.clientCountry,\n          paymentTerms: this.paymentTerms,\n          paymentDueDate: this.paymentDueDate,\n          paymentDueDateUnix: this.paymentDueDateUnix,\n          productDescription: this.productDescription,\n          invoiceItemList: this.invoiceItemList,\n          invoiceTotal: this.invoiceTotal,\n          invoicePending: this.invoicePending,\n          invoiceDraft: this.invoiceDraft\n        });\n\n            this.loading = false;\n\n            const data = {\n            docId: this.docId,\n            routeId: this.$route.params.invoiceId,\n          };\n\n            this.UPDATE_INVOICE(data);\n        },\n\n        submitForm() {\n        if (this.editInvoice) {\n          this.updateInvoice();\n          return;\n        }\n        this.uploadInvoice();\n      },\n\n    },\n    computed: {\n      ...mapState(['editInvoice', \"currentInvoiceArray\"])\n    },\n    watch: {\n        paymentTerms() {\n            const futureDate = new Date();\n            this.paymentDueDateUnix = futureDate.setDate(futureDate.getDate() + parseInt(this.paymentTerms));\n            this.paymentDueDate = new Date(this.paymentDueDateUnix).toLocaleDateString(\"en-us\", this.dateOptions);\n        }\n    },\n};\n</script>\n\n\n<style lang=\"scss\" scoped>\n.invoice-wrap {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  overflow: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  @media (min-width: 900px) {\n    left: 90px;\n  }\n\n  .invoice-content {\n    position: relative;\n    padding: 56px;\n    max-width: 700px;\n    width: 100%;\n    background-color: #141625;\n    color: #fff;\n    box-shadow: 10px 4px 6px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n\n    h1 {\n      margin-bottom: 48px;\n      color: #fff;\n    }\n\n    h3 {\n      margin-bottom: 16px;\n      font-size: 18px;\n      color: #777f98;\n    }\n\n    h4 {\n      color: #7c5dfa;\n      font-size: 12px;\n      margin-bottom: 24px;\n    }\n\n    // Bill To / Bill From\n    .bill-to,\n    .bill-from {\n      margin-bottom: 48px;\n\n      .location-details {\n        gap: 16px;\n        div {\n          flex: 1;\n        }\n      }\n    }\n\n    // Invoice Work\n\n    .invoice-work {\n      .payment {\n        gap: 24px;\n        div {\n          flex: 1;\n        }\n      }\n\n      .work-items {\n        .item-list {\n          width: 100%;\n\n          // Item Table Styling\n          .table-heading,\n          .table-items {\n            gap: 16px;\n            font-size: 12px;\n\n            .item-name {\n              flex-basis: 50%;\n            }\n\n            .qty {\n              flex-basis: 10%;\n            }\n\n            .price {\n              flex-basis: 20%;\n            }\n\n            .total {\n              flex-basis: 20%;\n              align-self: center;\n            }\n          }\n\n          .table-heading {\n            margin-bottom: 16px;\n\n            th {\n              text-align: left;\n            }\n          }\n\n          .table-items {\n            position: relative;\n            margin-bottom: 24px;\n\n            img {\n              position: absolute;\n              top: 15px;\n              right: 0;\n              width: 12px;\n              height: 16px;\n            }\n          }\n        }\n\n        .button {\n          color: #fff;\n          background-color: #252945;\n          align-items: center;\n          justify-content: center;\n          width: 100%;\n\n          img {\n            margin-right: 4px;\n          }\n        }\n      }\n    }\n\n    .save {\n      margin-top: 60px;\n\n      div {\n        flex: 1;\n      }\n\n      .right {\n        justify-content: flex-end;\n      }\n    }\n  }\n\n  .input {\n    margin-bottom: 24px;\n  }\n\n  label {\n    font-size: 12px;\n    margin-bottom: 6px;\n  }\n\n  input,\n  select {\n    width: 100%;\n    background-color: #1e2139;\n    color: #fff;\n    border-radius: 4px;\n    padding: 12px 4px;\n    border: none;\n\n    &:focus {\n      outline: none;\n    }\n  }\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}